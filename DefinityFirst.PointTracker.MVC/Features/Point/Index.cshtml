@using DefinityFirst.PointTracker.MVC.Features
@using DefinityFirst.PointTracker.MVC.Features.Point

@model IList<Index.Model>
@{
    ViewBag.Title = "Point Types";
}
<h2>Departments</h2>
<p>
    @Html.ActionLink("Create New", nameof(PointController.Create))
</p>
<table id="grid-data" class="table table-condensed table-hover table-striped">
    <thead>
        <tr>
            <th data-column-id="Code" data-identifier="true" data-header-css-class="colum smaller-column">Code</th>
            <th data-column-id="Name">Name</th>
            <th data-column-id="commands" data-formatter="commands" data-sortable="false" data-header-css-class="colum widest-column"></th>
        </tr>
    </thead>
</table>

@section Scripts{

    <script type="text/javascript">
        $(function () {
            var grid = $("#grid-data").bootgrid({
                ajax: true,
                ajaxSettings: {
                    method: "POST",
                    contentType: "application/json"
                },
                templates: {
                    search: "",
                    actionDropDownCheckboxItem: "",
                    header: "<div id=\"grid-data-header\" class=\"bootgrid-header container-fluid\"><div class=\"row\"><div class=\"col-sm-12 actionBar\"><a href='/Admin/Role/Create' class='btn btn-xs btn-default btn-add' target='_self'>Add Role</a></div></div></div>"
                },
                requestHandler: function (request) {
                    var theSearchModel = {
                        // Code: $("#searchCode").val()
                    };

                    var sortColumn = Object.keys(request.sort);

                    var model = {
                        searchModel: theSearchModel,
                        current: request.current,
                        rowCount: request.rowCount,
                        sortBy: sortColumn[0],
                        sortDirection: request.sort[sortColumn],
                        searchPhrase: request.searchPhrase
                    };

                    return JSON.stringify(model);
                },
                url: "/Point/Grid",
                formatters: {
                    "commands": function (column, row) {
                        return "<a href='/Admin/Permission/Index/" + row.Code + "' class='btn btn-xs btn-default'><span>View Permissions</span></a>" +
                            "<a href='../Role/Edit/" + row._id + "' class='btn btn-xs btn-default'><span class='fa fa-pencil'></span></a>" +
                            "<button type=\"button\" class=\"btn btn-xs btn-default command-delete\" data-row-id=\"" + row._id + "\" data-row-code=\"" + row.Code + "\"><span class='fa fa-trash'></span></button>";
                    }
                }
            }).on("loaded.rs.jquery.bootgrid", function () {
                $("#spinnerElement").hide();
                grid.find(".command-delete").on("click", function (e) {
                    var id = $(this).data("row-id");
                    bootbox.confirm('Would you like to delete ' + $(this).data("row-code") + ' role?', function (result) {
                        if (result) {
                            $.ajax({
                                type: "POST",
                                url: "/Admin/Role/Delete",
                                data: {
                                    id: id
                                },
                                success: function (data) {
                                    $(grid).bootgrid("reload");
                                }
                            })
                                .fail(function (response) {
                                    toastr.error("There was an error deleting the item.");
                                });
                        }
                    });
                });
            });

            $("#searchButton").on("click", function () {
                $('#grid-data').bootgrid('reload');
            });
        });
    </script>
}